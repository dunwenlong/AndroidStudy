★ 1、HTTP状态码
作用：Web服务器告诉客户端发生了什么事，状态码一般位于Http响应的第一行中，会返回一个“三位数字的状态码”和一个“状态消息”。状态码便于程序处理，状态消息更便于人理解。
状态码分类：
    , 已定义范围, 分类
1XX ,   100-101, 信息提示，表示服务器收到请求并需要请求继续处理
# 客户端发起请求时， 这些请求通常都是成功的。服务器有一组用来表示成功的状态码，分别对应于不同类型的请求。
2XX ,   200-206, 成功
# 重定向状态码用来告诉浏览器客户端，它们访问的资源已被移动， Web服务器发送一个重定向状态码和一个可选的Location Header, 告诉客户端新的资源地址在哪。
3XX ,   300-305, 重定向
# 有时客户端会发送一些服务器无法处理的东西，比如格式错误的Request, 或者最常见的是， 请求一个不存在的URL。
4XX ,   400-405, 客户端错误
# 有时候客户端发送了一条有效Request, Web服务器自身却出错了。 可能是Web服务器运行出错了， 或者网站都挂了。  5XX就是用来描述服务器错误的
5XX ,   500-505, 服务器端错误
具体：
200 OK 服务器成功处理了请求
206	Partial Content（部分内容）	 部分请求成功
206状态码代表服务器已经成功处理了部分GET请求（只有发送GET 方法的request, web服务器才可能返回206），
应用场景：
1. FlashGet, 迅雷或者HTTP下载工具都是使用206状态码来实现断点续传
2. 将以个大文档分解为多个下载段同时下载 比如，在线看视频

301/302 Moved Permanently 请求的URL已移走。Response中应该包含一个Location URL,说明资源现在所处的位置
304 Not Modified（未修改）客户的缓存资源是最新的， 要客户端使用缓存
400 发送的Request中的数据有错误(比如：表单有错误，Cookie有错误)，  这个我们也经常见到。 
403 Web客户端发送的请求被Web服务器拒绝了， 如果服务器想说明为什么拒绝请求，可以包含实体的主体部分来对原因进行描述。但这个状态码通常是服务器不想说明拒绝原因。
404 Not Found 未找到资源
501 Internal Server Error服务器遇到一个错误，使其无法对请求提供服务
502 Bad Gateway(网关故障) 代理使用的服务器遇到了上游的无效响应
505 Web服务器不支持此http协议的版本
403 请求被服务器拒绝了
408 如果客户端完成请求时花费的时间太长， 服务器可以回送这个状态码并关闭连接

★ 2、域名解析步骤
DNS全称 Domain Name System（域名系统），将对应的域名解析成IP地址返回给用户。
1.浏览器首先在自己缓存中查找是否有该域名解析过的IP地址，如果有则直接返回IP，解析过程结束。
2.浏览器向本机操作系统查找是否有缓存域名解析对应的IP地址，如果有则返回IP，解析过程结束。
3.浏览器向本地DNS服务器发送请求
4.本地DNS查找对应域名解析后的IP，若查找成功则返回给用户结果，否则向根服务器发送请求
5.根服务器向本地服务器返回顶级域名服务器地址。
6.本地服务器向顶级域名服务器地址发送请求
7.顶级域名服务器返回Name Server服务器地址
8.本地服务器向Name Server发送请求
9.Name Server将解析结果返回给本地服务器
10.本地服务器将结果缓存并将结果返回给用户
11.用户获得结果并将结果缓存在浏览器和本机操作系统中，解析结束

【主域名服务器】：负责维护一个区域所有域名信息，为特定域名的所有信息的权威来源，可以修改信息。
【辅助域名服务器】：当主域名服务器出现故障，关机或负载过重等情况，辅助域名服务器作为备份服务器来提供域名解析服务，辅助域名服务器是从另一台远程域名服务器下载的所有域名信息，域名信息不具有修改权限
【缓存域名服务器】：当从远程域名服务器获得域名解析信息后，将其缓存到高速缓存中，当下次需要请求相同的域名解析时，直接从本地缓存中读取，缓存域名信息不具有权威性
【转发域名服务器】：转发域名服务器用来请求不在本地域名服务器上的信息，当收到域名请求服务时，先在本地缓存中查取，如果查询不到。即依次向指定的域名服务器发出请求，直到查到所需信息返回结果。否则，返回无法映射的信息。

★ HTTP协议
HTTP协议通常承载于TCP协议之上，有时也承载于TLS或SSL协议层之上，这个时候，就成了我们常说的HTTPS。
★ OSI参考模型：网络7层协议
【应用层】与其它计算机进行通讯的一个应用，它是对应应用程序的通信服务的。示例：TELNET，HTTP，FTP，NFS，SMTP，POP3等。（为应用程序提供服务）
【表示层】这一层的主要功能是定义数据格式及加密。（数据格式化、数据加密）
【会话层】它定义了如何开始、控制和结束一个会话，包括对多个双向消息的控制和管理，以便在只完成连续消息的一部分时可以通知应用，从而使表示层看到的数据是连续的，在某些情况下，如果表示层收到了所有的数据，则用数据代表表示层。（建立、管理、和维护会话）
【传输层】这层的功能包括是否选择差错恢复协议还是无差错恢复协议，及在同一主机上对不同应用的数据流的输入进行复用，还包括对收到的顺序不对的数据包的重新排序功能，示例：TCP，UDP，SPX。（建立、管理和维护端到端的连接）（设备：四层交换机、四层路由器）
【网络层】这层对端到端的包传输进行定义，它定义了能够标识所有结点的逻辑地址，还定义了路由实现的方式和学习的方式。为了适应最大传输单元长度小于包长度的传输介质，网络层还定义了如何将一个包分解成更小的包的分段方法。示例：IP，IPX，ICMP，RIP，IGMP等。（Ip选址及路由选择）（路由器、三层交换机）
【数据链路层】它定义了在单个链路上如何传输数据。这些协议与被讨论的各种介质有关，如ATM(异步转移模式)，FDDI(光纤分布式数据接口)等。数据链路层又分为2个子层：逻辑链路控制子层（LLC）和媒体访问控制子层（MAC）。MAC子层处理CSMA/CD算法、数据出错校验、成帧等；LLC子层定义了一些字段使上次协议能共享数据链路层。 在实际使用中，LLC子层并非必需的。实例：ARP，RARP，IEEE802.3，PPP，CSMA/CD（提供介质访问和链路管理）（网桥、以太网交换机、网卡） 
【物理层】常用设备有（各种物理设备）集线器、中继器、调制解调器、网线、双绞线、同轴电缆。这些都是物理层的传输介质。（中继器、集线器、双绞线）
TCP/IP五层模型的话前三层统一用应用层表示。

★ TCP HTTP UDP 三者的关系
TCP/IP是个协议组，可分为四个层次：网络接口层、网络层、传输层和应用层。
在网络层有IP协议、ICMP协议、ARP协议、RARP协议和BOOTP协议。
在传输层中有TCP协议与UDP协议。
在应用层有HTTP,FTP、TELNET、SMTP、DNS等协议。
UDP不支持HTTP和HTTPS协议。TCP不支持HTTP和HTTPS协议。虽然HTTP本身是一个协议，但其最终还是基于TCP的。

【HTTP】 HTTP连接最显著的特点是客户端发送的每次请求都需要服务器回送响应，在请求结束后，会主动释放连接。从建立连接到关闭连接的过程称为“一次连接”。
【HTTPS】HTTPS（Secure Hypertext Transfer Protocol）安全超文本传输协议，它是一个安全通信通道。
　　HTTPS是HTTP over SSL/TLS，HTTP是应用层协议，TCP是传输层协议，在应用层和传输层之间，增加了一个安全套接层SSL/TLS：SSL (Secure Socket Layer，安全套接字层)。TLS (Transport Layer Security，传输层安全协议)。SSL使用40 位关键字作为RC4流加密算法。
【HTTPS的作用】内容加密 建立一个信息安全通道，来保证数据传输的安全；身份认证 确认网站的真实性；数据完整性 防止内容被第三方冒充或者篡改。
【HTTP和HTTPS协议的区别】数据HTTP协议和HTTPS协议在应用层加密之后，还要到传输层将加密数据包让TCP协议进行加密，因为都要进行三次握手，所以HTTP协议和HTTPS协议底层都是基于TCP协议的。
HTTPS协议需要到CA申请证书。
HTTP是超文本传输协议，信息是明文传输；HTTPS则是具有安全性的ssl加密传输协议。
HTTP和HTTPS使用的是完全不同的连接方式，用的端口也不一样，HTTP是80端口，HTTPS是443端口。
HTTP的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。
【HTTP协议传输的优点】（1）基于应用级的接口使用方便（2）程序员开发水平要求不高，容错性强
【缺点】（1）传输速度慢，数据包大 （2）如实时交互，服务器性能压力大 （3）数据传输安全性差
★
★
★